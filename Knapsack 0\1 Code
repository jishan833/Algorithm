#include<stdio.h>

int max(int a, int b)
{
    return (a > b) ? a : b;
}

int knapsack(int cap,int profit[],int weight[],int n)
{
    int p[n+1][cap+1];

    for(int i=0; i<=n; i++)
    {
        for(int w=0; w<=cap; w++)
        {
            if(i==0 || w==0)
            {
                p[i][w]=0;
            }
                else if(weight[i-1] <= w)
            {
               p[i][w] = max(p[i-1][w], profit[i-1] + p[i-1][w - weight[i-1]]);
            }
            else
           {
            p[i][w]=p[i-1][w];
           }
        }
    }

    int w = cap;
    printf("Weights used: ");
    for (int i = n; i > 0 && w > 0; i--)
    {
        if (p[i][w] != p[i - 1][w])
        {
            printf("%d ", weight[i - 1]);
            w -= weight[i - 1];
        }
    }
    printf("\n");
    return p[n][cap];
}

int main()
{
    int profit[]={12,9,16};
    int weight[]={10,20,30};
    int cap=50;
    int n=sizeof(profit)/sizeof(profit[0]);
    printf("\nValue = %d", knapsack(cap,profit,weight,n));
    return 0;
}
