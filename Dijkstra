#include<stdio.h>
#include<stdbool.h>
#include<limits.h>
#define x 3
#define MAX 1000


int mindistance(int dist[], bool travel[]) {
    int min_value = MAX;
    int min_Index = -1;
    for(int i = 0; i < x; i++)
    {
        if (!travel[i] && dist[i] < min_value)
        {
            min_value = dist[i];
            min_Index = i;
        }
    }
    return min_Index;
}

void printSolution(int dist[])
{
    printf("Vertex \t\t Distance from Source\n");
    for (int i = 0; i < x; i++)
        printf("%d \t\t\t %d\n", i, dist[i]);
}

void greedy(int graph[x][x], int start)
{
    int dist[x];
    bool travel[x];

    for (int i = 0; i < x; i++)
    {
        dist[i] = MAX;
        travel[i] = false;
    }
    dist[start] = 0;

    for (int count = 0; count < x - 1; count++)
    {
        int u = mindistance(dist, travel);
        travel[u] = true;

        for (int v = 0; v < x; v++)
        {
            if (!travel[v] && graph[u][v] && dist[u] != MAX && dist[u] + graph[u][v] < dist[v])
            {
                dist[v] = dist[u] + graph[u][v];
            }
        }
    }

    printSolution(dist);
}

int main()
{
    int graph[x][x] =
    {
        {0, 2, 1},
        {2, 0, 5},
        {1, 5, 0}
    };

    greedy(graph, 0);
    return 0;
}
